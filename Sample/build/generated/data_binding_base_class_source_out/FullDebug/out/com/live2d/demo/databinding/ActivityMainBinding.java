// Generated by view binder compiler. Do not edit!
package com.live2d.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.live2d.demo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout bottomNavButtons;

  @NonNull
  public final ImageButton buttonCalendar;

  @NonNull
  public final ImageButton buttonMain;

  @NonNull
  public final ImageButton buttonSetting;

  @NonNull
  public final ConstraintLayout rootLayout;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout bottomNavButtons, @NonNull ImageButton buttonCalendar,
      @NonNull ImageButton buttonMain, @NonNull ImageButton buttonSetting,
      @NonNull ConstraintLayout rootLayout) {
    this.rootView = rootView;
    this.bottomNavButtons = bottomNavButtons;
    this.buttonCalendar = buttonCalendar;
    this.buttonMain = buttonMain;
    this.buttonSetting = buttonSetting;
    this.rootLayout = rootLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_nav_buttons;
      LinearLayout bottomNavButtons = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavButtons == null) {
        break missingId;
      }

      id = R.id.button_calendar;
      ImageButton buttonCalendar = ViewBindings.findChildViewById(rootView, id);
      if (buttonCalendar == null) {
        break missingId;
      }

      id = R.id.button_main;
      ImageButton buttonMain = ViewBindings.findChildViewById(rootView, id);
      if (buttonMain == null) {
        break missingId;
      }

      id = R.id.button_setting;
      ImageButton buttonSetting = ViewBindings.findChildViewById(rootView, id);
      if (buttonSetting == null) {
        break missingId;
      }

      ConstraintLayout rootLayout = (ConstraintLayout) rootView;

      return new ActivityMainBinding((ConstraintLayout) rootView, bottomNavButtons, buttonCalendar,
          buttonMain, buttonSetting, rootLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
